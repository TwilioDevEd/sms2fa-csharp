.step(
  data-title='About this Application',
  data-file='SMS2FA.Web/App_Start/IdentityConfig.cs')
  :markdown
    ## About this Application

    This [ASP.NET](http://www.asp.net/mvc) application example
    demonstrates how to implement an SMS two-factor authentication using Twilio.

    _To run this application yourself [download the code and follow the
    instructions on GitHub](//github.com/TwilioDevEd/sms2fa-csharp)._

    Adding two-factor authentication (2FA) to your web application increases the
    security of your user's data. [Multi-factor
    authentication](http://en.wikipedia.org/wiki/Multi-factor_authentication)
    determines the identity of a user in two steps:

    1. First we validate the user with an email and password

    2. Second, by sending them a one-time **verification code** to a mobile device.

    Once our user enters the verification code, we know they have received the SMS,
    and indeed are who they say they are. This is a standard SMS implementation.

    For a slightly more advanced implementation using [Authy](//www.twilio.com/authy)
    One-Touch checkout this
    [tutorial](//www.twilio.com/docs/tutorials/walkthrough/two-factor-authentication/csharp/mvc).

    Let's get started!

    ---

    **See Also:**

    * [REST API: Sending SMS or MMS](//www.twilio.com/docs/api/rest/sending-messages)
    * [Account Confirmation and Password Recovery with ASP.NET Identity](//go.microsoft.com/fwlink/?LinkID=320771)

.step(
  data-title='Adding Two-Factor Authentication',
  data-file='SMS2FA.Web/Domain/Twilio/TwilioMessageSender.cs',
  data-highlight='15-25')
  :markdown
    ## Adding Two-Factor Authentication

    This application uses [ASP.NET
    Identity](//www.asp.net/identity/overview/getting-started/introduction-to-aspnet-identity)
    to manage authentication.

    The Twilio helper library allows us to easily send an SMS.

    First we have to create an instance of a **Twilio Rest Client** with our
    credentials. Now all we have to do to send an SMS using the REST API is to
    call `client.messages.create()` with the necessary parameters.

    You can find your credentials at your [Twilio Account](//www.twilio.com/user/account/phone-numbers/incoming).

    ---

    **See Also:**

    * [Twilio C# Helper Library](//www.twilio.com/docs/libraries/csharp)
    * [Twilio: Sending a Text Message](//www.twilio.com/docs/quickstart/python/sms/sending-via-rest)

.step(
  data-title='Registering a Two-Factor Provider',
  data-file='SMS2FA.Web/App_Start/IdentityConfig.cs',
  data-highlight='87-90,97')
  :markdown
    ## Registering a Two-Factor Provider

    [**Individual User
    Accounts**](//www.asp.net/mvc/overview/security/create-an-aspnet-mvc-5-web-app-with-email-confirmation-and-password-reset)
    authentication provides Two-Factor authentication almost ready out of the
    box.
    To setup 2-step authentication you have to register the right provider
    for your application.

    We are registering the `PhoneNumberTokenProvider` to send text messages.

    ---

    **See Also:**

    * [PhoneNumberTokenProvider](//msdn.microsoft.com/en-us/library/dn613285.aspx)

.step(
  data-title='Sending the Verification Code',
  data-file='SMS2FA.Web/Controllers/AccountController.cs',
  data-highlight='311-331')
  :markdown
    ## Sending the Verification Code

    When a user tries to login, the application needs to make sure the user
    possesses the phone number they entered.

    We have a Two-Factor authentication provider registered, which will be used
    to to send a 6-digit validation code to validate the login.

    ---

    **See Also:**

    * [SendTwoFactorCodeAsync](//msdn.microsoft.com/en-us/library/mt173763.aspx)

.step(
  data-title='Verifying the Code',
  data-file='SMS2FA.Web/Controllers/AccountController.cs',
  data-highlight='101-150')
  :markdown
    ## Verifying the Code

    The user needs to have logged in with their credentials.

    `TwoFactorSignInAsync` takes care of protecting the application against
    brute force attacks by using an expirable verification code. If the user
    enters incorrect codes their account will be locked out.

    If the validation was successful the application allows the user to have
    access to the protected content. Otherwise the application will prompt for
    the validation code once again.

    ---

    **See Also:**

    * [TwoFactorSignInAsync](//msdn.microsoft.com/en-us/library/mt173758.aspx)

.step
  :markdown
    ## Where to next?

    That's it! We've just implemented an SMS Two-Factor Authenticated
    application. If you're a ASP.NET developer working with Twilio, you might want to check out these other tutorials.

    [**Automated Survey**](//www.twilio.com/docs/tutorials/walkthrough/automated-survey/csharp/mvc)

    Instantly collect structured data from your users with a survey conducted over a call or SMS text messages.

    [**Click to Call**](//www.twilio.com/docs/tutorials/walkthrough/click-to-call/csharp/mvc)

    Click-to-call enables your company to convert web traffic into phone calls with the click of a button.
    Learn how to implement it in minutes.

    ### Did this help?

    Thanks for checking this tutorial out! If you have any feedback
    to share with us, we'd love to hear it.
    [Contact the Twilio Developer Education Team](mailto:deved-oss@twilio.com) to let us know what you think.
